<?php
class HM_Form_AssignDeputy extends HM_Form{

	public function init(){

        $this->setMethod(Zend_Form::METHOD_POST);
        $this->setName('assign_deputy');

        $this->addElement(
            'hidden',
            'cancelUrl',
            array(
                 'Required' => false,
                 'Value' => ''
            ));

        $this->addElement(
            'hidden',
            'user_id',
            array(
                'Required' => false,
                'value' => 0
            ));

        $this->addElement($this->getDefaultTagsElementName(), 'deputy_user_id', array(
            'Label'       => _('Заместитель'),
            'Description' => _('Выбор пользователя, которого хотите назначить своим заместителем на указанный срок'),
            //'json_url'    => $this->getView()->url(array('module' => 'supervisor', 'controller' => 'deputy', 'action' => 'get-deputs')),
            'json_url' => $this->getView()->url(array('module' => 'user', 'controller' => 'ajax', 'action' => 'users-list'), null, true),
            'newel' => false,
            'maxitems' => 1,
            'required' => true,
            'Validators' => array(
                array('deputy', false, array('nameDateBegin' => 'begin_date', 'nameDateEnd' => 'end_date'))
            )
        ));


//        $this->addElement(new HM_Form_Element_FcbkComplete('deputy_user_id', array(
//                'Label'       => _('Заместитель'),
//                'Description' => _('Выбор пользователя, которого хотите назначить своим заместителем на указанный срок'),
//                //'json_url'    => $this->getView()->url(array('module' => 'supervisor', 'controller' => 'deputy', 'action' => 'get-deputs')),
//                'json_url' => $this->getView()->url(array('module' => 'user', 'controller' => 'ajax', 'action' => 'users-list'), null, true),
//                'newel' => false,
//                'maxitems' => 1,
//                'required' => true,
//                'Validators' => array(
//                    array('deputy', false, array('nameDateBegin' => 'begin_date', 'nameDateEnd' => 'end_date'))
//                )
//            )
//        ));


        $this->addElement($this->getDefaultDatePickerElementName(), 'begin_date', array(
            'Label'       => _('Дата начала'),
            'required' => true,
//            'Filters' => array('MsSqlDate')
        ));

        $this->addElement($this->getDefaultDatePickerElementName(), 'end_date', array(
            'Label'       => _('Дата окончания'),
            'required' => true,
//            'Filters' => array('MsSqlDate')
        ));

        $this->addDisplayGroup(
            array('deputy_user_id', 'begin_date', 'end_date'),
            'mainGroup',
            array('legend' => _('Главная'))
        );


        $this->addElement(
            'Submit',
            'submit',
            array(
                 'Label' => _('Сохранить')
            ));

        parent::init(); // required!

    }

    public function isValid($data)
    {
        $result = parent::isValid($data); // TODO: Change the autogenerated stub

        if (! $result && isset($data['deputy_user_id']) && is_array($data['deputy_user_id'])) {
            $service = Zend_Registry::get('serviceContainer')->getService('User');
            $r = $service->fetchAll(
                $service->quoteInto(
                    "MID IN (?)", $data['deputy_user_id']
                )
            );

            $ddd = array();
            foreach ($r as $item) {
                $ddd[$item->MID] = sprintf('%s %s %s', $item->LastName, $item->FirstName, $item->Patronymic);
            }

            $this->getElement('deputy_user_id')->setValue($ddd);
        }

        return $result;
    }

}