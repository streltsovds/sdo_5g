<?php
class HM_Quest_Type_PsychoService extends HM_Service_Abstract
{
    public function calcData($questId, $attemptId, $inputs)
    {
        $categoryResults = $this->getService('QuestCategoryResult')->fetchAll(array('attempt_id = ?' => $attemptId));
        if (!count($categoryResults)) {
return;
        }

        $cats = $this->getService('QuestCategory')->fetchAll(array('quest_id = ?' => $questId));

        $categories2Name = $cats->getList('category_id', 'name');
        $categories = array();        
        foreach($cats as $cat) {
            $categories[$cat->name] = $cat;
        }

        $rawData = array();
        foreach($categories2Name as $catId=>$name) {
            $rawData[$name] = '';
        }
        foreach($categoryResults as $result) {
            if(!$result->category_id) continue;

            $name = $categories2Name[$result->category_id];
            $rawData[$name] = $result->score_raw;
        }

        switch($questId) {
            case HM_Quest_Type_PsychoModel::FORM_ID_KETTELL:
                $results = $this->_calcKettel($rawData, $categories, $inputs['age'], $inputs['gender']);
            break;
            case HM_Quest_Type_PsychoModel::FORM_ID_CPI:
                $results = $this->_calcCPI($rawData, $categories);//, $inputs['age'], $inputs['gender']);
            break;
            case HM_Quest_Type_PsychoModel::FORM_ID_MMIL:
                $results = $this->_calcMMIL($rawData, $categories, $inputs['gender']);//, $inputs['age'], $inputs['gender']);
            break;
        }

        $graph = array();    
        $data = array();    
        $table = array();    
        foreach($results['charts'] as $i=>$chart) {
            $graph[$i] = array('title' => $chart['title']);
            $data[$i] = array();
            $table[$i] = array();
         
            foreach($chart['categories'] as $j=>$pk) {

                $table[$i][$pk] = $results['data'][$pk];

                $graph[$i][] = array(
                    'title' => $pk,
                    'label' => $pk,
                );

                $data[$i][] = array(
                    'value' => round($results['data'][$pk][1], 0),
                    'title' => $pk,
                );
            }
        }

        return array('graph'=>$graph, 'data'=>$data, 'table'=>$table, 'tdata'=>$results['tdata']);
    }

    public function _calcMMIL($rawData, $categories, $gender) {

/////////////////////////////////////////////////////////////////////
        $k2T = array(
  'M' => [
    'L' => array(3.944, 2.236),
    'F' => array(5.756, 2.921),
    'K' => array(15.744, 3.881),
    'Hs' => array(12.044, 3.283),
    'D' => array(20.252, 4.144),
    'Hy' => array(18.068, 4.438),
    'Pd' => array(21.232, 4.177),
    'Mf' => array(21.606, 3.913),
    'Pa' => array(9.24, 2.771),
    'Pt' => array(27.384, 4.791),
    'Sc' => array(26.704, 4.463),
    'Ma' => array(18.62, 4.005),
    'Si' => array(26.766, 7.037),
    ],        
  'F' => [
    'L' => array(4.456, 2.435),
    'F' => array(6.768, 3.183),
    'K' => array(14.567, 4.143),
    'Hs' => array(14.45, 4.47),
    'D' => array(24.656, 5.033),
    'Hy' => array(20.332, 5.176),
    'Pd' => array(21.976, 4.119),
    'Mf' => array(31.976, 3.82),
    'Pa' => array(10.493, 3.295),
    'Pt' => array(31.840, 4.772),
    'Sc' => array(29.556, 5.254),
    'Ma' => array(18.952, 3.816),
    'Si' => array(30.376, 7.748),
    ],          
);

        $TData = $rawData;

        $table = array();
        foreach($k2T[$gender] as $var => $kts) {
            $value = 50+(10*($TData[$var] - $kts[0])/$kts[1]);
            $TData[$var] = $value;
            $table[$var] = array($var, $value, $categories[$var]->description, $this->getService('QuestCategoryResult')->getResultByScore($categories[$var]->formula, $value));
        }

        $charts = array(
            array(
                'title'=>_('Результаты опроса ММИЛ'), 
                'categories'=>array('L', 'F', 'K', 'Hs', 'D', 'Hy', 'Pd', 'Mf', 'Pa', 'Pt', 'Sc', 'Ma', 'Si')
            ),
        );

        return array('charts'=>$charts, 'data'=>$table, 'tdata'=>$TData);
    }
                                          
    public function _calcCPI($rawData, $categories) {

        $k2T = array(
    'Do' => array(23.08, 4.03),
    'Cs' => array(16.14, 3.36),
    'Sy' => array(22.99, 3.96),
    'Sp' => array(24.81,	4.08),
    'Sa' => array(17.24,	2.98),
    'In' => array(20.1,	3.05),
    'Em' => array(19.56,	3.72),
    'Re' => array(25.62,	4.11),
    'So' => array(33.14,	3.81),
    'Sc' => array(24.36,	5.35),
    'Gi' => array(24.21,	6.45),
    'Cm' => array(32.23,	2.47),
    'Wb' => array(33.19,	3.56),
    'To' => array(20.24,	4.38),
    'Ac' => array(28.99,	3.68),
    'Ai' => array(22.04,	4.47),
    'Ie' => array(30.86,	4.17),
    'Py' => array(16.12,	2.44),
    'Fx' => array(8.94,	3.23),
    'F/M' => array(12.88,	2.97),
    'v.1' => array(13.52,	4.77),
    'v.2' => array(27.13,	4.73),
    'v.3' => array(34.76,	7.9),
    'Mp' => array(22.89,	4.59),
    'Wo' => array(29.98,	4.33),
    'Ct' => array(17.8,	3.91),
    'Lp' => array(54.11,	7.03),
    'Ami' => array(24.29,	4.35),
    'Leo' => array(27.26,	3.2),
    'Tm' => array(26.67,	4.12),
    'B-MS' => array(39.85,	5.73),
    'B-Fm' => array(25.88,	3.95),
    'Anx' => array(6.92,	1.83),
    'Nar' => array(24,	5.4),
    'D-SD' => array(23.52,	3.61),
    'D-AC' => array(15.89,	3.01),
);

        $add3Params = array(
            'FG' => '41.225+(0.273*[Do])+(0.198*[Em])+(0.538*[Gi])-(0.255*[Wb])-(0.168*[Fx])', //если FG≥60,6, то выделить в отчете показатель красным цветом.
            'FB' => '86.613-(1*[Cm])-(0.191* [Wb])+(0.203*[Ac])-(0.11*[Fx])', //если FB≥59,5 и R<48,01, то выделить в отчете показатель красным цветом
            'R'  => '34.096+(0.279*[Gi])+(0.201*[Wb])+(0.225*[Py])+(0.157*[Fx])',
        );

        foreach($add3Params as $var=>$formula){
            $TData[$var] = $rawData[$var] = $this->_caclFormula($formula, $rawData);
        }

        $TData = $rawData;

        $table = array();
        foreach($k2T as $var => $kts) {
            $value = 50+(10*($TData[$var] - $kts[0])/$kts[1]);
            $TData[$var] = $value;
            $table[$var] = array($var, $value, $categories[$var]->description, $this->getService('QuestCategoryResult')->getResultByScore($categories[$var]->formula, $value));
        }

        foreach($add3Params as $var=>$formula){
            $table[$var] = array($var, $TData[$var], $categories[$var]->description, $this->getService('QuestCategoryResult')->getResultByScore($categories[$var]->formula, $TData[$var]));
         }

        $charts = array(
            array(
                'title'=>_('Оценка достоверности руководителя высшего звена'), 
                'categories'=>array('Gi','Cm','Wb','D-SD','D-AC','FG','FB','R')
            ),
            array(
                'title'=>_('Основные шкалы руководителя высшего звена'), 
                'categories'=>array('Do','Cs','Sy','Sp','Sa','In','Em','Re','So','Sc','To','Ac','Ai','Ie','Py','Fx','F/M')
            ),
            array(
                'title'=>_('Целевые шкалы руководители высшего звена'), 
                'categories'=>array('Mp','Wo','Ct','Lp','Ami','Leo','Tm','B-MS','B-Fm','Anx','Nar')
            ),
            array(
                'title'=>_('Векторные шкалы руководители высшего звена'), 
                'categories'=>array('v.1', 'v.2', 'v.3')
            ),
        );

        return array('charts'=>$charts, 'data'=>$table, 'tdata'=>$TData);
    }

    public function _calcKettel($rawData, $categories, $age, $gender) {
//if(!$age || $age<19 || $age>60) die('age');
//Здесь проверка на возраст и пол ДБ !!!!!!!!!!!!!!!!!!!!!
//$age & $gender

$KETTEL = [
  'M' => [
    '16-19' => [
'A'=>[ [0, 4], [5, 6], 7, 8, [9, 10], [11, 12], 13, [14, 15], 16, [17, 20]],
'B'=>[ [0, 3], 4, 5, 6, 7, [8, 9], 10, 11, 12, 13],
'C'=>[ [0, 6], [7, 8], [9, 10], [11, 12], [13, 14], [15, 16], [17, 18], [19, 20], [21, 22], [23, 26]],
'E'=>[ [0, 4], [5, 6], [7, 9], [10, 11], [12, 14], [15, 17], [18, 19], [20, 22], [23, 24], [25, 26]],
'F'=>[ [0, 5], [6, 7], [8, 9], [10, 12], [13, 14], [15, 17], [18, 19], [20, 21], [22, 24], [25, 26]],
'G'=>[ 0, [1, 2], [3, 4], [5, 6], [7, 9], [10, 12], [13, 14], [15, 16], [17, 18], [19, 20]],
'H'=>[ [0, 2], [3, 4], [5, 6], [7, 8], [9, 11], [12, 15], [16, 17], [18, 19], [20, 21], [22, 26]],
'I'=>[ [0, 1], [2, 3], [4, 5], [6, 7], 8, [9, 10], [11, 13], [14, 15], [16, 17], [18, 20]],
'L'=>[ [0, 3], [4, 5], [6, 7], [8, 9], 10, [11, 12], [13, 14], [15, 16], 17, [18, 20]],
'M'=>[ [0, 4], [5, 6], [7, 8], 9, [10, 11], [12, 13], 14, [15, 16], [17, 18], [19, 26]],
'N'=>[ [0, 3], 4, 5, [6, 7], 8, 9, [10, 11], 12, 13, [14, 20]],
'O'=>[ [0, 2], [3, 4], [5, 6], 7, [8, 9], [10, 11], [12, 13], 14, [15, 16], [17, 26]],
'Q1'=>[ [0, 2], [3, 5], [6, 7], 8, [9, 10], [11, 12], [13, 14], [15, 16], 17, [18, 20]],
'Q2'=>[ [0, 5], [6, 7], 8, [9, 10], 11, [12, 13], 14, [15, 16], 17, [18, 20]],
'Q3'=>[ [0, 5], 6, [7, 8], 9, [10, 11], 12, [13, 14], 15, [16, 17], [18, 20]],
'Q4'=>[ [0, 2], [3, 4], [5, 7], [8, 9], [10, 11], [12, 14], [15, 16], [17, 19], [20, 21], [22, 26]],
    ],
    '20-24' => [
'A'=>[ [0, 4], 5, [6, 7], [8, 9], 10, [11, 12], [13, 14], 15, [16, 17], [18, 20]],
'B'=>[ [0, 3], 4, 5, 6, 7, 8, 9, 10, 11, [12, 13]],
'C'=>[ [0, 5], [6, 7], [8, 9], [10, 11], [12, 14], [15, 16], [17, 18], [19, 20], [21, 22], [23, 26]],
'E'=>[ [0, 3], [4, 5], [6, 8], [9, 10], [11, 13], [14, 16], [17, 18], [19, 21], [22, 23], [24, 26]],
'F'=>[ [0, 4], [5, 6], [7, 8], [9, 11], [12, 13], [14, 15], [16, 18], [19, 20], [21, 22], [23, 26]],
'G'=>[ [0, 2], [3, 4], [5, 6], [7, 8], [9, 11], [12, 13], [14, 15], [16, 17], 18, [19, 20]],
'H'=>[ [0, 1], [2, 3], [4, 5], [6, 8], [9, 11], [12, 15], [16, 17], [18, 19], [20, 21], [22, 26]],
'I'=>[ [0, 1], [2, 3], [4, 5], [6, 7], 8, [9, 10], [11, 12], [13, 14], [15, 16], [17, 20]],
'L'=>[ [0, 4], 5, [6, 7], [8, 9], 10, [11, 12], 13, [14, 15], 16, [17, 20]],
'M'=>[ [0, 5], 6, [7, 8], 9, [10, 11], [12, 13], 14, [15, 16], [17, 18], [19, 26]],
'N'=>[ [0, 3], [4, 5], 6, 7, [8, 9], 10, 11, [12, 13], 14, [15, 20]],
'O'=>[ [0, 1], [2, 3], [4, 5], [6, 7], [8, 9], [10, 11], [12, 13], 14, [15, 16], [17, 26]],
'Q1'=>[ [0, 1], [2, 3], [4, 5], [6, 7], [8, 9], [10, 11], [12, 13], 14, [15, 16], [17, 20]],
'Q2'=>[ [0, 5], 6, [7, 8], 9, [10, 11], [12, 13], 14, [15, 16], 17, [18, 20]],
'Q3'=>[ [0, 5], [6, 7], 8, [9, 10], 11, [12, 13], 14, [15, 16], 17, [18, 20]],
'Q4'=>[ [0, 2], [3, 4], [5, 7], [8, 9], [10, 11], [12, 14], [15, 16], [17, 19], [20, 21], [22, 26]],
    ],
    '25-33' => [
'A'=>[ [0, 4], [5, 6], 7, [8, 9], [10, 11], 12, [13, 14], [15, 16], [17, 18], [19, 20]],
'B'=>[ [0, 3], 4, 5, 6, 7, 8, 9, 10, 11, [12, 13]],
'C'=>[ [0, 5], [6, 7], [8, 9], [10, 11], [12, 13], [14, 15], [16, 18], [19, 20], [21, 22], [23, 26]],
'E'=>[ [0, 3], [4, 5], [6, 8], [9, 10], [11, 13], [14, 15], [16, 18], [19, 21], [22, 23], [24, 26]],
'F'=>[ [0, 4], [5, 6], [7, 8], [9, 10], [11, 12], [13, 14], [15, 16], [17, 18], [19, 20], [21, 26]],
'G'=>[ [0, 4], [5, 7], [8, 9], 10, [11, 13], 14, [15, 16], 17, [18, 19], 20],
'H'=>[ [0, 1], [2, 4], 5, [6, 8], [9, 10], [11, 15], [16, 17], [18, 19], [20, 21], [22, 26]],
'I'=>[ [0, 1], [2, 3], 4, [5, 6], 7, [8, 9], [10, 11], [12, 14], [15, 16], [17, 20]],
'L'=>[ [0, 4], 5, [6, 7], [8, 9], 10, [11, 12], 13, [14, 15], 16, [17, 20]],
'M'=>[ [0, 5], [6, 7], 8, [9, 10], 11, [12, 13], 14, [15, 16], 17, [18, 26]],
'N'=>[ [0, 4], 5, [6, 7], 8, 9, [10, 11], 12, 13, [14, 15], [16, 20]],
'O'=>[ [0, 1], [2, 3], [4, 5], [6, 7], [8, 9], [10, 11], [12, 13], [14, 15], [16, 17], [18, 26]],
'Q1'=>[ [0, 2], [3, 4], 5, 6, [7, 8], [9, 10], [11, 12], 13, [14, 15], [16, 20]],
'Q2'=>[ [0, 4], [5, 6], 7, [8, 9], 10, [11, 12], 13, [14, 15], [16, 17], [18, 20]],
'Q3'=>[ [0, 6], 7, [8, 9], 10, [11, 12], [13, 14], 15, [16, 17], 18, [19, 20]],
'Q4'=>[ [0, 2], [3, 5], [6, 7], [8, 9], [10, 11], [12, 14], [15, 16], [17, 18], [19, 21], [22, 26]]
    ],
    '34-45' => [
'A'=>[ [0, 4], [5, 6], [7, 8], 9, [10, 11], [12, 13], [14, 15], [16, 17], 18 , [19, 20]],
'B'=>[ [0, 3], 4, 5, 6, 7, 8, 9, 10, 11, [12, 13]],
'C'=>[ [0, 5], [6, 7], [8, 9], [10, 11], [12, 13], [14, 15], [16, 17], [18, 19], [20, 21], [22, 26]],
'E'=>[ [0, 2], [3, 5], [6, 7], [8, 10], [11, 12], [13, 15], [16, 18], [19, 20], [21, 23], [24, 26]],
'F'=>[ [0, 3], [4, 5], [6, 7], [8, 9], [10, 11], [12, 13], [14, 15], [16, 17], [18, 19], [20, 26]],
'G'=>[ [0, 6], [7, 9], [10, 11], [12, 13], [14, 15], 16 , 17, 18, 19, 20],
'H'=>[ [0, 1], [2, 4], 5, [6, 8], [9, 11], [12, 15], [16, 17], [18, 19], [20, 21], [22, 26]],
'I'=>[ [0, 1], [2, 3], 4, [5, 6], 7, [8, 9], [10, 11], [12, 14], [15, 16], [17, 20]],
'L'=>[ [0, 5], 6, [7, 8], 9, 10, [11, 12], 13, [14, 15], 16, [17, 20]],
'M'=>[ [0, 6], 7, [8, 9], 10, [11, 12], 13, [14, 15], 16, [17, 18], [19, 26]],
'N'=>[ [0, 5], 6, 7, [8, 9], 10, 11, [12, 13], 14, 15, [16, 20]],
'O'=>[ [0, 1], [2, 3], [4, 5], [6, 7], [8, 9], [10, 11], [12, 13], [14, 15], [16, 18], [19, 26]],
'Q1'=>[ [0, 2], 3, [4, 5], 6 , 7, [8, 9], [10, 11], 12, [13, 14], [15, 20]],
'Q2'=>[ [0, 3], [4, 5], [6, 7], 8 , [9, 10], 11, [12, 13], 14, [15, 16], [17, 20]],
'Q3'=>[ [0, 7], 8, [9, 10], 11, [12, 13], 14, [15, 16], 17, 18, [19, 20]],
'Q4'=>[ [0, 2], [3, 5], [6, 7], [8, 9], [10, 11], [12, 14], [15, 16], [17, 18], [19, 21], [22, 26]],
    ],
    '46-60' => [
'A'=>[ [0, 4], [5, 6], [7, 8], [9, 10], [11, 12], [13, 14], [15, 16], 17, [18, 19], 20],
'B'=>[ [0, 2], 3, 4, 5, 6, 7, 8, 9, 10, [11, 13]],
'C'=>[ [0, 4], [5, 6], [7, 8], [9, 10], [11, 12], [13, 15], [16, 17], [18, 19], [20, 21], [22, 26]],
'E'=>[ [0, 2], [3, 5], [6, 7], [8, 10], [11, 13], [14, 15], [16, 18], [19, 20], [21, 23], [24, 26]],
'F'=>[ [0, 2], [3, 4], [5, 6], [7, 8], [9, 10], 11, [12, 13], [14, 15], [16, 17], [18, 26]],
'G'=>[ [0, 8], [9, 11], [12, 14], 15, 16, 17, 18, [19, 20]],
'H'=>[ [0, 2], [3, 4], 5, [6, 8], [9, 12], [13, 14], [15, 17], [18, 20], [21, 22], [23, 26]],
'I'=>[ [0, 1], 2, [3, 4], 5, [6, 7], [8, 9], [10, 11], [12, 14], [15, 16], [17, 20]],
'L'=>[ [0, 5], 6, [7, 8], 9, 10, [11, 12], 13, 14, [15, 16], [17, 20]],
'M'=>[ [0, 7], 8, [9, 10], 11, 12, [13, 14], 15, [16, 17], 18, [19, 26]],
'N'=>[ [0, 5], [6, 7], 8, 9, [10, 11], 12, 13, [14, 15], 16, [17, 20]],
'O'=>[ [0, 1], [2, 3], [4, 5], [6, 8], [9, 10], [11, 12], [13, 14], [15, 16], [17, 18], [19, 26]],
'Q1'=>[ [0, 2], 3 , 4, [5, 6], 7, 8, [9, 10], [11, 12], [13, 14], [15, 20]],
'Q2'=>[ [0, 3], 4, [5, 6], 7, [8, 9], 10, [11, 12], 13, [14, 15], [16, 20]],
'Q3'=>[ [0, 7], [8, 9], [10, 11], 12, [13, 14], 15, [16, 17], [17, 18], [18, 19], 20],
'Q4'=>[ [0, 3], [4, 5], [6, 7], [8, 9], [10, 11], [12, 14], [15, 16], [17, 18], [19, 20], [21, 26]],
    ],
  ], 

  'F' => [
    '16-19' => [
'A'=>[ [0, 5], [6, 7], 8, [9, 10], [11, 12], [13, 14], 15, [16, 17], [18, 19], 20],
'B'=>[ [0, 3], 4, 5, 6, 7, [8, 9], 10, 11, 12, 13],
'C'=>[ [0, 5], [6, 7], [8, 9], [10, 11], 12, [13, 14], [15, 16], [17, 18], [19, 20], [21, 26]],
'E'=>[ [0, 3], [4, 5], [6, 7], [8, 9], [10, 11], [12, 13], [14, 16], [17, 18], [19, 20], [21, 26]],
'F'=>[ [0, 6], [7, 8], [9, 10], [11, 12], 13, [14, 16], [17, 18], [19, 20], [21, 22], [23, 36]],
'G'=>[ [0, 3], [4, 5], [6, 8], [9, 10], 11, [12, 13], [14, 15], 16, [17, 18], [19, 20]],
'H'=>[ [0, 1], 2, [3, 5], [6, 7], [8, 10], [11, 13], [14, 16], [17, 19], [20, 22], [23, 26]],
'I'=>[ [0, 7], [8, 9], 10, [11, 12], 13, [14, 15], 16, 17, [18, 19], 20],
'L'=>[ [0, 4], [5, 6], [7, 8], 9, [10, 11], 12, 13, [14, 15], [16, 17], [18, 20]],
'M'=>[ [0, 3], [4, 5], 6, [7, 8], [9, 10], [11, 12], [13, 14], 15, [16, 17], [18, 26]],
'N'=>[ [0, 4], 5, [6, 7], 8, [9, 10], 11, [12, 13], 14, [15, 16], [17, 20]],
'O'=>[ [0, 4], [5, 6], [7, 8], 9, [10, 11], [12, 13], [14, 15], [16, 17], [18, 19], [20, 26]],
'Q1'=>[ [0, 1], [2, 3], 4, [5, 6], [7, 8], 9, [10, 11], 12, [13, 14], [15, 20]],
'Q2'=>[ [0, 5], [6, 7], 8, 9, 10, [11, 12], 13, 14, 15, [16, 20]],
'Q3'=>[ [0, 4], 5, [6, 7], 8, [9, 10], 11, [12, 13], 14, [15, 16], [17, 20]],
'Q4'=>[ [0, 7], 8, [9, 10], [11, 12], [13, 14], [15, 16], [17, 18], [19, 20], [21, 23], [24, 26]],

    ],
    '20-24' => [
'A'=>[ [0, 5], [6, 7], 8, [9, 10], [11, 12], [13, 14], 15, [16, 17], [18, 19], 20],
'B'=>[ [0, 3], 4, 5, 6, 7, [8, 9], 10, 11, 12, 13],
'C'=>[ [0, 4], [5, 6], [7, 8], [9, 10], [11, 12], 13, [14, 15], [16, 17], [18, 20], [21, 26]],
'E'=>[ [0, 2], [3, 5], [6, 7], [8, 9], [10, 11], [12, 13], [14, 15], [16, 17], [18, 20], [21, 26]],
'F'=>[ [0, 4], [5, 6], [7, 8], [9, 10], [11, 12], [13, 14], [15, 16], [17, 18], [19, 20], [21, 26]],
'G'=>[ [0, 5], [6, 7], [8, 9], [10, 11], 12, [13, 14], 15 , 16, [17, 18], [19, 20]],
'H'=>[ 0, [1, 2], [3, 4], [5, 7], [8, 10], [11, 12], [13, 16], [17, 19], [20, 22], [23, 26]],
'I'=>[ [0, 7], 8, [9, 10], [11, 12], 13, [14, 15], 16, 17, [18, 19], 20],
'L'=>[ [0, 4], [5, 6], [7, 8], 9, [10, 11], 12, [13, 14], 15, [16, 17], [18, 20]],
'M'=>[ [0, 4], 5, [6, 7], [8, 9], 10, [11, 12], [13, 14], 15, [16, 17], [18, 26]],
'N'=>[ [0, 4], 5, [6, 7], [8, 9], 10, [11, 12], 13, [14, 15], [16, 17], [18, 20]],
'O'=>[ [0, 4], [5, 6], [7, 8], 9, [10, 11], [12, 13], [14, 15], [16, 17], [18, 19], [20, 26]],
'Q1'=>[ [0, 1], [2, 3], 4, [5, 6], [7, 8], 9, [10, 11], 12, [13, 14], [15, 20]],
'Q2'=>[ [0, 5], [6, 7], 8, 9, 10, [11, 12], 13 , 14, 15 , [16, 20]],
'Q3'=>[ [0, 5], 6, [7, 8], 9 , 10, [11, 12], 13, [14, 15], [16, 17], [18, 20]],
'Q4'=>[ [0, 6], [7, 8], [9, 10], [11, 12], [13, 14], [15, 16], [17, 18], [19, 20], [21, 23], [24, 26]],

    ],
    '25-33' => [
'A'=>[ [0, 5], 6, [7, 8], [9, 10], [11, 12], 13, [14, 15], [16, 17], 18, [19, 20]],
'B'=>[ [0, 2], [3, 4], 5, 6, 7, 8, 9, 10, 11, [12, 13]],
'C'=>[ [0, 3], [4, 5], [6, 7], [8, 9], [10, 11], [12, 13], [14, 15], [16, 17], [18, 19], [20, 26]],
'E'=>[ [0, 2], [3, 4], [5, 7], [8, 9], [10, 11], [12, 13], [14, 15], [16, 17], [18, 19], [20, 26]],
'F'=>[ [0, 3], [4, 5], [6, 7], [8, 9], [10, 11], [12, 13], [14, 15], [16, 17], [18, 19], [20, 26]],
'G'=>[ [0, 7], 8, [9, 10], 11, [12, 13], [14, 15], 16 , 17, 18, [19, 20]],
'H'=>[ 0, [1, 2], [3, 4], [5, 7], [8, 9], [10, 12], [13, 15], [16, 18], [19, 22], [23, 26]],
'I'=>[ [0, 7], 8, [9, 10], [11, 12], 13, [14, 15], 16, 17, [18, 19], 20],
'L'=>[ [0, 4], [5, 6], 7, [8, 9], 10, [11, 12], 13, [14, 15], 16, [17, 20]],
'M'=>[ [0, 4], [5, 6], 7, [8, 9], [10, 11], 12, [13, 14], [15, 16], 17, [18, 26]],
'N'=>[ [0, 5], 6, [7, 8], 9 , [10, 11], 12, [13, 14], 15, [16, 17], [18, 20]],
'O'=>[ [0, 4], [5, 6], [7, 8], 9, [10, 11], [12, 13], [14, 15], [16, 17], [18, 19], [20, 26]],
'Q1'=>[ [0, 2], 3, [4, 5], 6 , 7, [8, 9], [10, 11], 12, [13, 14], [15, 20]],
'Q2'=>[ [0, 5], 6, [7, 8], 9, [10, 11], 12, [13, 14], 15, [16, 17], [18, 20]],
'Q3'=>[ [0, 5], [6, 7], 8, [9, 10], 11, [12, 13], 14, [15, 16], 17, [18, 20]],
'Q4'=>[ [0, 5], [6, 7], [8, 10], [11, 12], [13, 14], [15, 16], [17, 18], [19, 21], 22, [23, 26]],

    ],
    '34-45' => [
'A'=>[ [0, 5], 6, [7, 8], [9, 10], 11, [12, 13], [14, 15], 16, [17, 18], [19, 20]],
'B'=>[ [0, 2], 3, 4, 5, 6, 7, 8, 9, 10, [11, 13]],
'C'=>[ [0, 4], 5, [6, 7], [8, 9], [10, 11], [12, 13], [14, 15], [16, 17], [18, 19], [20, 26]],
'E'=>[ [0, 2], [3, 4], [5, 6], [7, 8], [9, 11], [12, 13], [14, 15], [16, 17], [18, 19], [20, 26]],
'F'=>[ [0, 2], [3, 4], [5, 6], [7, 8], [9, 10], [11, 12], [13, 14], [15, 16], [17, 18], [19, 26]],
'G'=>[ [0, 8], [9, 10], 11, 12, [13, 14], 15 , [16, 17], 18, 19, 20],
'H'=>[ 0 , [1, 2], [3, 4], [5, 6], [7, 9], [10, 11], [12, 15], [16, 18], [19, 22], [23, 26]],
'I'=>[ [0, 6], [7, 8], [9, 10], [11, 12], [13, 14], 15, 16, 17, 18, [19, 20]],
'L'=>[ [0, 4], [5, 6], 7, [8, 9], 10, [11, 12], 13, [14, 15], 16, [17, 20]],
'M'=>[ [0, 4], [5, 6], [7, 8], 9, [10, 11], [12, 13], 14, [15, 16], 17, [18, 26]],
'N'=>[ [0, 5], 6, [7, 8], 9, [10, 11], 12, [13, 14], 15, [16, 17], [18, 20]],
'O'=>[ [0, 4], [5, 6], [7, 8], 9 , [10, 11], [12, 13], [14, 15], [16, 17], [18, 19], [20, 26]],
'Q1'=>[ [0, 2], 3, 4, 5, [6, 7], [8, 9], [10, 11], 12, 13, [14, 20]],
'Q2'=>[ [0, 5], 6, [7, 8], 9, [10, 11], 12, [13, 14], [15, 16], 17, [18, 20]],
'Q3'=>[ [0, 6], 7, [8, 9], 10, [11, 12], 13, [14, 15], 16, [17, 18], [19, 20]],
'Q4'=>[ [0, 5], [6, 7], [8, 9], [10, 12], [13, 14], [15, 16], [17, 18], [19, 21], 22 , [23, 26]],
    ],
    '46-60' => [
'A'=>[ [0, 5], 6, [7, 8], [9, 10], 11 , [12, 13], [14, 15], 16, [17, 18], [19, 20]],
'B'=>[ [0, 1], 2, 3, 4, 5, 6, 7, 8, [9, 10], [11, 13]],
'C'=>[ [0, 4], [5, 6], [7, 8], [9, 10], [11, 12], [13, 14], 15, [16, 17], [18, 19], [20, 26]],
'E'=>[ [0, 2], [3, 4], [5, 6], [7, 8], [9, 10], [11, 12], [13, 14], [15, 17], [18, 19], [20, 26]],
'F'=>[ 0, [1, 2], [3, 4], [5, 6], [7, 8], [9, 10], [11, 12], [13, 14], [15, 16], [17, 26]],
'G'=>[ [0, 9], 10, [11, 12], 13, [14, 15], 16, 17, 18, 19, 20],
'H'=>[ 0, [1, 2], [3, 4], [5, 6], [7, 8], [9, 10], [11, 14], [15, 17], [18, 22], [23, 26]],
'I'=>[ [0, 6], [7, 8], [9, 10], [11, 12], [13, 14], 15 , [16, 17], 18, 19, 20],
'L'=>[ [0, 4], 5, [6, 7], 8, [9, 10], 11, [12, 13], 14, [15, 16], [17, 20]],
'M'=>[ [0, 4], [5, 6], [7, 8], 9, [10, 11], [12, 13], [14, 15], [16, 17], 18 , [19, 26]],
'N'=>[ [0, 6], [7, 8], 9 , [10, 11], 12, 13, [14, 15], 16, 17, [18, 20]],
'O'=>[ [0, 4], [5, 6], [7, 8], 9, [10, 11], [12, 13], [14, 15], [16, 17], [18, 19], [20, 26]],
'Q1'=>[ [0, 1], 2, [3, 4], 5 , 6, [7, 8], [9, 10], 11 , 12, [13, 20]],
'Q2'=>[ [0, 5], 6, [7, 8], 9, [10, 11], [12, 13], 14, [15, 16], 17, [18, 20]],
'Q3'=>[ [0, 6], [7, 8], 9, [10, 11], 12, [13, 14], 15, [16, 17], 18, [19, 20]],
'Q4'=>[ [0, 5], [6, 7], [8, 9], [10, 12], [13, 14], [15, 16], [17, 18], [19, 21], 22, [23, 26]],
    ],
  ] 
];

        $KETTELg = $KETTEL[$gender];
        $kts = false;
        foreach($KETTELg as $aged=>$data) {
            $aged = explode('-', $aged);
            if($age>=$aged[0] && $age<=$aged[1]) {
                $kts = $data;
                break;
            }
        }

if(!$kts) die('!kts');

//Здесь проверка на то, что нашли $kts !!!!!!!!!!!!!!!!!!!!!
        $TData = array();

        foreach($rawData as $pk=>$value) {
            $kt = $kts[$pk];
if(!$kt) die('!kt');

            foreach($kt as $k=>$pair) {
                if(!is_array($pair)) {
                    $pair = array($pair, $pair);
                }
                if($value>=$pair[0] && $value<=$pair[1]) {
                    $TData[$pk] = $k+1;
                    break;
                }
            }
        }

        $charts = array(
            array(
                'title'=>_('Результаты опроса Кеттела'), 
                'categories'=>array('A','B','C','E','F','G','H','I','L','M','N','O','Q1','Q2','Q3','Q4')//, 'Gk', 'Ak')
            ),
        );

        $table = array();
        foreach($TData as $var => $value) {
            $table[$var] = array($var, $value, $categories[$var]->description, $this->getService('QuestCategoryResult')->getResultByScore($categories[$var]->formula, $value));
        }

        return array('charts'=>$charts, 'data'=>$table, 'tdata'=>$TData);
    }


     function _caclFormula($formula, $rawData) {

        foreach($rawData as $var=>$value) {
            $formula = str_replace("[{$var}]", $value, $formula);
        }
        if(strpos($formula, '[')!==false) { 
die('Не хватает данных: '.$formula);
            return '';
        }

        try {
            $e = @eval("return {$formula};");
        }catch(ParseError $err){
            die('Error: exception '.$err);
        }
        return $e;
    }    

}