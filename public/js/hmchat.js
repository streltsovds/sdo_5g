function HMChat(url, channelId, token) {    var self = this;    this.debug = false;    this.url = url;    this.channelId = channelId;    this.token = token;    this.buildMessage = null;//you need to set this callback    this.onMessageAdd = null;//you need to set this callback    window.ChatIsListen = false;    this.listen = function(lastModified) {        if(window.ChatIsListen) {            return;        }        window.ChatIsListen = true;        $.ajax({            url: self.url+'?callback=?',            dataType: 'jsonp',            data: {                'last_modified': lastModified,                'channel_id': self.channelId,                'token': self.token,                'action': 'sub'            },            success: function(res, textStatus, xhr) {                window.ChatIsListen = false;                // console.log(res);                if(res.status != 200) {                    if(self.debug) {                    alert(res.result);                    }                    setTimeout(function() {                       self.listen(lastModified);                    }, 1000);                    return;                }                                if(res.result != null && res.result.length > 0) {                    for(var i=0; i<res.result.length; i++) {                        var data = res.result[i];                        // console.log(data);                        if(data.id != undefined) {                            self.onMessageAdd(self.buildMessage(data));                        }                    }                }                                /* Start the next long poll. */                self.listen(res.last_modified);            },            error: function(xhr, textStatus, errorThrown) {                window.ChatIsListen = false;                // console.log(xhr, textStatus, errorThrown);                if(textStatus == 'timeout') {                    self.listen(lastModified);                    return;                }                if(errorThrown != undefined) {                    if(textStatus == 'parsererror' && $.browser.msie) {                    } else {                        if(self.debug) {                    alert(textStatus + ' | ' + errorThrown);                }                        setTimeout(function() {                           self.listen(lastModified);                        }, 1000);            }            }            }        });    };}